{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JDOO\\\\Documents\\\\movie_app_2021\\\\src\\\\App.js\";\nimport React from 'react';\nimport Proptypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"loader-text\",\n          children: \"Loading .... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : movies.map(movie => {\n        console.log(movie);\n        return /*#__PURE__*/_jsxDEV(Movie, {\n          id: movie.id,\n          title: movie.title,\n          summary: movie.summary,\n          poster: movie.medium_cover_image,\n          year: movie.year\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/JDOO/Documents/movie_app_2021/src/App.js"],"names":["React","Proptypes","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","render","map","movie","console","log","id","title","summary","medium_cover_image","year"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACzB;AACLC,MAAAA,SAAS,EAAG,IADP;AAELC,MAAAA,MAAM,EAAC;AAFF,KADyB;;AAAA,SAMhCC,SANgC,GAMpB,YAAY;AACrB,YAAM;AAACC,QAAAA,IAAI,EAAC;AAACA,UAAAA,IAAI,EAAC;AAACF,YAAAA;AAAD;AAAN;AAAN,UAAyB,MAAMN,KAAK,CAACS,GAAN,CAAU,0DAAV,CAArC;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAD;AAAUD,QAAAA,SAAS,EAAC;AAApB,OAAd;AACF,KAT+B;AAAA;;AAWhCM,EAAAA,iBAAiB,GAAE;AACjB,SAAKJ,SAAL;AAED;;AACFK,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEP,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAuB,KAAKF,KAAlC;AACA,wBACE;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,gBACGC,SAAS,gBACR;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,+BACE;AAAM,UAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADQ,GAIPC,MAAM,CAACO,GAAP,CAAWC,KAAK,IAAI;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,4BAAO,QAAC,KAAD;AAAsB,UAAA,EAAE,EAAEA,KAAK,CAACG,EAAhC;AAAoC,UAAA,KAAK,EAAEH,KAAK,CAACI,KAAjD;AAAwD,UAAA,OAAO,EAAEJ,KAAK,CAACK,OAAvE;AAAgF,UAAA,MAAM,EAAEL,KAAK,CAACM,kBAA9F;AAAkH,UAAA,IAAI,EAAEN,KAAK,CAACO;AAA9H,WAAYP,KAAK,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAHI;AALL;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA5B8B;;AA+BjC,eAAef,GAAf","sourcesContent":["import React from 'react';\nimport Proptypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component{\n state ={\n   isLoading : true,\n   movies:[]\n }\n\n getMovies = async () => {\n    const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies , isLoading:false});\n }\n\n componentDidMount(){\n   this.getMovies();\n   \n }\nrender(){\n    const { isLoading, movies} = this.state;\n    return (\n      <section class=\"container\">\n        {isLoading ? (\n          <div class=\"loader\">\n            <span class=\"loader-text\">Loading .... </span>\n          </div>\n        ): movies.map(movie => {\n        console.log(movie);\n        return <Movie key={movie.id} id={movie.id} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} year={movie.year} />\n      })}</section>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}